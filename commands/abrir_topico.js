const { SlashCommandBuilder, ChannelType } = require('discord.js');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('abrir_topico')
        .setDescription('Abre um novo t√≥pico com um t√≠tulo e mensagem.')
        .addStringOption(option =>
            option.setName('titulo')
                .setDescription('O t√≠tulo do t√≥pico (m√°ximo 98 caracteres, incluindo emoji).')
                .setRequired(true)
                .setMaxLength(98))
        .addStringOption(option =>
            option.setName('mensagem')
                .setDescription('A mensagem inicial do t√≥pico.')
                .setRequired(true)),
    async execute(interaction) {
        // CORRE√á√ÉO AQUI: Usando flags: 64 para o deferReply (ef√™mero)
        await interaction.deferReply({ flags: 64 });

        const titulo = interaction.options.getString('titulo');
        const mensagem = interaction.options.getString('mensagem');

        if (interaction.channel.type !== ChannelType.GuildText && interaction.channel.type !== ChannelType.GuildForum) {
            // Esta mensagem de erro j√° era editReply, ent√£o n√£o precisa de flags: 64 aqui,
            // pois o deferReply j√° a tornou ef√™mera.
            return interaction.editReply({ content: 'Este comando s√≥ pode ser usado em canais de texto ou f√≥runs.' });
        }

        const threadTitle = `üîµ ${titulo}`;

        try {
            // Opcional: Mostrar uma mensagem de "carregando" mais descritiva
            await interaction.editReply({ content: '‚è≥ Criando o t√≥pico...' });

            const newThread = await interaction.channel.threads.create({
                name: threadTitle,
                type: ChannelType.PublicThread,
                reason: `T√≥pico aberto por ${interaction.user.tag}`,
            });

            await newThread.send(mensagem);

            // CORRE√á√ÉO AQUI: Removido 'ephemeral: false'. Mensagens editadas ap√≥s deferReply
            // s√£o p√∫blicas por padr√£o, a menos que especificado 'flags: 64'.
            await interaction.editReply({ content: `T√≥pico '${newThread.name}' criado com sucesso em ${newThread.toString()}!` });
        } catch (error) {
            console.error('Erro ao criar t√≥pico:', error);
            if (error.code === 50013) {
                // Esta mensagem de erro j√° era editReply, ent√£o n√£o precisa de flags: 64 aqui,
                // pois o deferReply j√° a tornou ef√™mera.
                await interaction.editReply({ content: 'N√£o tenho permiss√£o para criar t√≥picos neste canal. Verifique as permiss√µes do bot.' });
            } else {
                // Esta mensagem de erro j√° era editReply, ent√£o n√£o precisa de flags: 64 aqui,
                // pois o deferReply j√° a tornou ef√™mera.
                await interaction.editReply({ content: `Ocorreu um erro ao criar o t√≥pico: ${error.message}` });
            }
        }
    },
};